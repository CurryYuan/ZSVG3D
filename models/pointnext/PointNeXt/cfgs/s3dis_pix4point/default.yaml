# data augmentation
dataset:
  common:
    NAME: S3DISSphere
    data_root: './data/S3DIS/Stanford3dDataset_v1.2'
    num_points: 16384
    in_radius: 2.0
    num_steps: 2000  # number of spheres for one training epoch.
    voxel_size: 0.04
    color_to_255: True
  train:
    split: train
    num_epochs: 600
  val:
    split: val
    num_epochs: 20
num_classes: 13
batch_size: 8
dataloader:
  num_workers: 6

feature_keys: pos,x,heights

use_mask: True
criterion_args:
  NAME: CrossEntropy
  label_smoothing: 0.2
# ---------------------------------------------------------------------------- #
# Training cfgs
# ---------------------------------------------------------------------------- #
val_fn: validate_sphere
val_freq: 10

ignore_index: 255
epochs: 600
optimizer:
 NAME: 'adamw'  # performs 1 point better than adam
 weight_decay: 1.0e-4

# lr_scheduler:
sched: cosine
warmup_epochs: 10

lr: 1.0e-4 # LR linear rule. 0.002 for 32 batches
min_lr: 1.0e-6

grad_norm_clip: 10
use_voting: False

datatransforms:
  train: [ChromaticAutoContrast, PointsToTensor, PointCloudScaling, PointCloudRotation, PointCloudJitter, ChromaticDropGPU, ChromaticNormalize]
  val: [PointsToTensor, ChromaticNormalize]
  vote: [ChromaticDropGPU]
  kwargs:
    color_drop: 0.2
    gravity_dim: 2
    scale: [0.9, 1.1]
    jitter_sigma: 0.005
    jitter_clip: 0.02
    angle: [0, 0, 1]


# ---------------------------------------------------------------------------- #
# io and misc
# ---------------------------------------------------------------------------- #
save_freq: -1 # save epoch every xxx epochs, -1 only save last and best.

log_dir: log/s3dis/pix4point
wandb:
  project: pix4point-S3DIS
